name: CI Rebuild All Supported Tags

on:
  schedule:
    - cron: '00 18 * * 5'
  workflow_dispatch: # Allow manual trigger

jobs:
  docker:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Fetch all history and tags

      - name: Get all supported tags
        id: get_tags
        run: |
          # Minimum supported version
          min_version="0.2.0"

          # Get all tags matching x.y.z format
          tags=$(git tag -l | grep -E '^([0-9]+\.[0-9]+\.[0-9]+)$' | sort -V | awk -v min_version="$min_version" '$0 >= min_version')

          if [ -z "$tags" ]; then
            echo "No tags found starting from $min_version"
            exit 1
          fi

          # Get the latest tag (last one in sorted list)
          latest_tag=$(echo "$tags" | tail -n 1)

          # Prepare Docker tags: latest and all versioned tags
          docker_tags=$(echo "$tags" | sed 's/^/orenlab\/pytmbot:/')
          tags_json="orenlab/pytmbot:latest,$(echo "$docker_tags" | tr '\n' ',' | sed 's/,$//')"

          echo "tags_json=$tags_json" >> $GITHUB_OUTPUT
          echo "latest_tag=$latest_tag" >> $GITHUB_OUTPUT

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: .
          # Build context is the directory containing Dockerfile
          target: production
          platforms: linux/amd64,linux/arm64
          sbom: true
          provenance: true
          file: Dockerfile
          push: true
          tags: |
            ${{ steps.get_tags.outputs.tags_json }}