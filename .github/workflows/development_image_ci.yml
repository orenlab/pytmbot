name: Push Alpine Dev Image

on:
  push:
    branches:
      - '0.2.2'

permissions:
  contents: read
  packages: write
  id-token: write
  security-events: write

jobs:
  push_dev_image:
    name: Build and Push Dev Image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
        with:
          platforms: all

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
        with:
          install: true

      - name: Install cosign
        uses: sigstore/cosign-installer@v3.1.1

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Extract metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: orenlab/pytmbot
          tags: |
            type=raw,value=alpine-dev
          labels: |
            org.opencontainers.image.title=pyTMbot
            org.opencontainers.image.description=Telegram bot for Docker monitoring
            org.opencontainers.image.source=https://github.com/orenlab/pytmbot

      - name: Build and push Docker image
        id: build-and-push
        uses: docker/build-push-action@v5
        with:
          context: .
          target: production
          file: Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=registry,ref=orenlab/pytmbot:alpine-dev
          cache-to: type=inline,mode=max
          provenance: mode=max
          sbom: true
          # Изменённая конфигурация outputs
          outputs: |
            type=registry,push=true
            type=oci
            type=sbom

      - name: Sign the image
        if: success()
        env:
          COSIGN_EXPERIMENTAL: 1
        run: |
          echo "${{ steps.build-and-push.outputs.digest }}" > image-digest.txt
          cosign sign --yes "orenlab/pytmbot@$(cat image-digest.txt)"

      - name: Generate SBOM with Syft
        if: success()
        uses: anchore/sbom-action@v0
        with:
          image: orenlab/pytmbot:alpine-dev
          format: spdx-json
          output-file: sbom-syft.json

      - name: Scan for vulnerabilities
        if: success()
        uses: anchore/scan-action@v3
        with:
          image: orenlab/pytmbot:alpine-dev
          fail-build: false
          severity-cutoff: high

      - name: Upload SBOM
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: sbom-files
          path: |
            sbom-syft.json
            image-digest.txt
          retention-days: 5